import random
from secret import flag
from helpers import asciiToBinary, binaryToHex, messageToBlocks, XOR

# 16 safe bit permutations
permutations = [
    [29, 36, 2, 19, 31, 10, 16, 21, 13, 22, 18, 15, 24, 3, 38, 30, 20, 12, 33, 28, 35, 7, 25, 0, 27, 23, 8, 17, 9, 6, 11, 37, 34, 26, 4, 14, 39, 1, 5, 32],
    [24, 31, 3, 34, 29, 16, 32, 4, 15, 6, 11, 27, 1, 8, 30, 7, 13, 2, 35, 17, 33, 12, 18, 25, 5, 20, 10, 22, 0, 36, 37, 39, 19, 26, 23, 28, 21, 38, 14, 9],
    [12, 39, 31, 29, 19, 33, 9, 7, 30, 25, 35, 28, 1, 17, 20, 10, 0, 23, 2, 11, 26, 8, 3, 37, 22, 36, 27, 18, 5, 34, 24, 32, 15, 14, 21, 6, 13, 38, 16, 4],
    [33, 0, 15, 2, 6, 27, 16, 38, 26, 24, 10, 23, 1, 8, 11, 39, 28, 17, 5, 37, 36, 35, 20, 30, 7, 21, 3, 9, 12, 32, 34, 19, 31, 18, 4, 14, 29, 22, 13, 25],
    [25, 6, 1, 27, 24, 5, 16, 11, 19, 20, 14, 9, 8, 12, 33, 26, 34, 29, 4, 31, 32, 35, 30, 7, 17, 0, 2, 18, 37, 28, 21, 39, 10, 15, 36, 23, 13, 38, 22, 3],
    [3, 19, 32, 25, 0, 13, 4, 12, 38, 15, 9, 30, 31, 36, 1, 20, 37, 7, 28, 29, 17, 10, 33, 23, 8, 39, 18, 22, 14, 16, 24, 6, 27, 26, 35, 2, 21, 34, 5, 11],
    [12, 32, 35, 20, 14, 28, 26, 21, 2, 13, 25, 17, 33, 6, 8, 11, 22, 15, 18, 38, 10, 37, 3, 36, 5, 16, 27, 24, 9, 23, 31, 0, 29, 7, 30, 19, 39, 4, 34, 1],
    [15, 26, 37, 28, 16, 33, 35, 1, 3, 32, 34, 12, 5, 0, 23, 18, 24, 2, 14, 4, 29, 8, 38, 36, 10, 21, 19, 13, 25, 7, 11, 20, 17, 6, 27, 9, 22, 39, 30, 31],
    [16, 32, 6, 7, 18, 31, 19, 37, 27, 11, 10, 34, 15, 4, 21, 33, 28, 5, 9, 22, 17, 14, 8, 3, 36, 24, 25, 13, 39, 26, 38, 29, 12, 23, 20, 1, 0, 35, 2, 30],
    [6, 34, 1, 11, 17, 12, 26, 39, 8, 36, 20, 15, 37, 27, 23, 2, 38, 31, 22, 25, 0, 7, 29, 16, 30, 21, 9, 4, 13, 32, 33, 14, 5, 3, 19, 10, 28, 35, 18, 24],
    [23, 19, 29, 30, 3, 14, 11, 17, 27, 18, 35, 12, 5, 4, 20, 32, 0, 9, 21, 13, 37, 2, 39, 24, 26, 10, 15, 1, 6, 16, 28, 7, 31, 36, 34, 25, 38, 33, 8, 22],
    [12, 33, 9, 34, 19, 2, 17, 28, 3, 21, 27, 16, 10, 35, 26, 7, 13, 39, 5, 0, 14, 36, 1, 23, 6, 22, 25, 8, 29, 32, 20, 38, 30, 24, 18, 31, 4, 15, 11, 37],
    [30, 38, 36, 14, 9, 39, 13, 33, 32, 27, 3, 12, 21, 2, 4, 19, 34, 31, 1, 15, 17, 10, 8, 23, 37, 11, 29, 6, 22, 18, 28, 26, 35, 25, 7, 0, 20, 16, 24, 5],
    [19, 25, 11, 28, 32, 22, 5, 15, 31, 17, 7, 12, 16, 33, 6, 26, 23, 34, 18, 2, 39, 4, 36, 14, 3, 27, 1, 29, 30, 24, 38, 10, 0, 35, 37, 9, 13, 8, 21, 20],
    [33, 26, 9, 16, 15, 39, 32, 3, 6, 30, 23, 7, 21, 24, 12, 20, 31, 22, 5, 19, 28, 13, 36, 0, 34, 14, 35, 2, 27, 25, 17, 11, 10, 37, 1, 4, 18, 38, 8, 29],
    [32, 12, 2, 22, 28, 24, 30, 20, 16, 15, 33, 9, 29, 25, 17, 38, 26, 34, 23, 27, 3, 8, 36, 6, 19, 1, 37, 11, 7, 5, 39, 35, 13, 31, 18, 4, 14, 0, 10, 21]
]

def round(m, k, permutation):
    c = ""
    for i in range(len(k)):
        # Plain text XOR key
        c += XOR(m[i], k[i])

    # Bitpermutation
    pc = [c[pi-1] for pi in permutation]

    return pc

def encrypt (message, key):

    key1 = key[0:len(message)]
    key2 = key[len(message):2*len(message)]

    # first round
    c = round(message, key1, permutations[0])

    # Last 15 rounds
    for i in range(1, len(permutations)):
        c = round(c, key1 if (i % 2 == 0) else key2, permutations[i])

    return "".join(c)
    